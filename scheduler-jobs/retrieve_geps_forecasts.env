##############################################################################
# Configuration vars, set in env.local before sourcing this file.
# This job assume the "scheduler" component is enabled.
##############################################################################

# Cronjob schedule.
if [ -z "$RETRIEVE_GEPS_FORECASTS_SCHEDULE" ]; then
    RETRIEVE_GEPS_FORECASTS_SCHEDULE="3 1,4,7,10,13,16,19,22 * * *"  # UTC
fi

# Location for local cache of git clone to save bandwidth and time from always
# re-cloning from scratch.
if [ -z "$RETRIEVE_GEPS_FORECASTS_CHECKOUT_CACHE" ]; then
    RETRIEVE_GEPS_FORECASTS_CHECKOUT_CACHE="/data/deploy_data_cache/retrieve_geps_forecasts"
fi

# Location of deploy-data config file.
# Provide a different config file to sync to a different location or include
# more files in the sync.
if [ -z "$RETRIEVE_GEPS_FORECASTS_CONFIG" ]; then
    RETRIEVE_GEPS_FORECASTS_CONFIG="${COMPOSE_DIR}/../../birdhouse-deploy-ouranos/scheduler-jobs/retrieve_geps_forecasts.yml"
fi

# Log file location.  Default location under /var/log/PAVICS/ has built-in logrotate.
if [ -z "$RETRIEVE_GEPS_FORECASTS_LOGFILE" ]; then
    RETRIEVE_GEPS_FORECASTS_LOGFILE="/var/log/PAVICS/retrieve_geps_forecasts.log"
fi

# Job name.
if [ -z "$RETRIEVE_GEPS_FORECASTS_JOB_NAME" ]; then
    RETRIEVE_GEPS_FORECASTS_JOB_NAME="retrieve_geps_forecasts"
fi

# Job description.
if [ -z "$RETRIEVE_GEPS_FORECASTS_JOB_DESCRIPTION" ]; then
    RETRIEVE_GEPS_FORECASTS_JOB_DESCRIPTION="Retrieve updated GEPS forecasts, convert to NetCDF format and make available on Thredds."
fi

# Docker image to run deploy-date script.
if [ -z "$RETRIEVE_GEPS_FORECASTS_DOCKER_IMAGE" ]; then
    RETRIEVE_GEPS_FORECASTS_DOCKER_IMAGE="docker:19.03.6-git"
fi

# MANDATORY to be set in env.local since pavics-vdb is a private repo.
# Location of ssh private key for git clone over ssh, useful for private repos.
#RETRIEVE_GEPS_FORECASTS_GIT_SSH_IDENTITY_FILE="/path/to/id_rsa"
#RETRIEVE_GEPS_FORECASTS_GIT_SSH_IDENTITY_FILE=/home/vagrant/.ssh/id_rsa_git_ssh_read_only

# OPTIONAL to override behavior of pavics-vdb/ECCC-datamart_sync/run_convert_grib2_to_nc
# 4 spaces in front of --env very important to respect.
#RETRIEVE_GEPS_FORECASTS_DOCKER_RUN_EXTRA_OPTS="
#    --env CONVERT_GRIB2_TO_NC_INPATH=/data/tmp/geps_forecast/grib2
#    --env CONVERT_GRIB2_TO_NC_OUTPATH=/data/tmp/geps_forecast/netcdf
#    --env CONVERT_GRIB2_TO_NC_THREDDSPATH=/pvcs1/DATA/eccc/forecasts/geps"

# Disable progress bar to avoid spamming logs file.
# Set good config file.
# Can all be overridden by caller.
RETRIEVE_GEPS_FORECASTS_DOCKER_RUN_EXTRA_OPTS="
    --env CONVERT_GRIB2_TO_NC_PROGRESSBAR=false
    --env LAUNCH_CONTAINER_CONFIG_FILE=ECCC-datamart_sync/convert_grib2_to_nc.conf $RETRIEVE_GEPS_FORECASTS_DOCKER_RUN_EXTRA_OPTS"

##############################################################################
# End configuration vars
##############################################################################


if [ -z "`echo "$AUTODEPLOY_EXTRA_SCHEDULER_JOBS" | grep $RETRIEVE_GEPS_FORECASTS_JOB_NAME`" ]; then

    # Add job only if not already added (config is read more than once during
    # autodeploy process).

    LOGFILE_DIRNAME="`dirname "$RETRIEVE_GEPS_FORECASTS_LOGFILE"`"

    EXTRA_DOCKER_ARGS=""
    if [ -n "$RETRIEVE_GEPS_FORECASTS_GIT_SSH_IDENTITY_FILE" ]; then
        EXTRA_DOCKER_ARGS="
    --volume ${RETRIEVE_GEPS_FORECASTS_GIT_SSH_IDENTITY_FILE}:${RETRIEVE_GEPS_FORECASTS_GIT_SSH_IDENTITY_FILE}:ro
    --env DEPLOY_DATA_GIT_SSH_IDENTITY_FILE=${RETRIEVE_GEPS_FORECASTS_GIT_SSH_IDENTITY_FILE}"
    fi

    EXTRA_DOCKER_ENV_ARGS="$RETRIEVE_GEPS_FORECASTS_DOCKER_RUN_EXTRA_OPTS"

    export AUTODEPLOY_EXTRA_SCHEDULER_JOBS="
$AUTODEPLOY_EXTRA_SCHEDULER_JOBS

- name: $RETRIEVE_GEPS_FORECASTS_JOB_NAME
  comment: $RETRIEVE_GEPS_FORECASTS_JOB_DESCRIPTION
  schedule: '$RETRIEVE_GEPS_FORECASTS_SCHEDULE'
  command: '/deploy-data ${RETRIEVE_GEPS_FORECASTS_CONFIG}'
  dockerargs: >-
    --rm --name $RETRIEVE_GEPS_FORECASTS_JOB_NAME
    --volume /var/run/docker.sock:/var/run/docker.sock:ro
    --volume ${COMPOSE_DIR}/deployment/deploy-data:/deploy-data:ro
    --volume ${RETRIEVE_GEPS_FORECASTS_CONFIG}:${RETRIEVE_GEPS_FORECASTS_CONFIG}:ro
    --volume ${RETRIEVE_GEPS_FORECASTS_CHECKOUT_CACHE}:${RETRIEVE_GEPS_FORECASTS_CHECKOUT_CACHE}:rw
    --volume ${LOGFILE_DIRNAME}:${LOGFILE_DIRNAME}:rw
    --env DEPLOY_DATA_CHECKOUT_CACHE=${RETRIEVE_GEPS_FORECASTS_CHECKOUT_CACHE}
    --env DEPLOY_DATA_LOGFILE=${RETRIEVE_GEPS_FORECASTS_LOGFILE} ${EXTRA_DOCKER_ARGS} ${EXTRA_DOCKER_ENV_ARGS}
  image: '$RETRIEVE_GEPS_FORECASTS_DOCKER_IMAGE'
"

fi


# vi: tabstop=8 expandtab shiftwidth=4 softtabstop=4
